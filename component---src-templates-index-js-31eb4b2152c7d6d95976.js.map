{"version":3,"sources":["webpack:///./src/templates/Page/index.js","webpack:///./src/templates/index.js","webpack:///./src/components/Adsense/index.js","webpack:///./src/templates/Post/index.js"],"names":["Page","_ref","data","react_default","a","createElement","dangerouslySetInnerHTML","__html","post","html","Template","location","Layout","Meta","title","get","site","desc","ogimg","Post","options","isIndex","adsense","templates_Page","props","pageQuery","Adsense","componentDidMount","this","clientId","window","adsbygoogle","push","render","_this$props","slotId","format","className","style","display","data-ad-client","data-ad-slot","data-ad-format","React","Component","getAd","_data$frontmatter","frontmatter","path","image","isMore","match","fluid","key","scrollAnimation_min_default","animateIn","animateOnce","gatsby_image_default","getDescription","Button","label","primary","react_scroll_up_default","showUnder","src","height","width","components_Adsense","body","replace","split","_ref2","gatsby_browser_entry","to"],"mappings":"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","file":"component---src-templates-index-js-31eb4b2152c7d6d95976.js","sourcesContent":["import React from 'react'\nimport './style.scss'\n\nconst Page = ({ data }) => (\n  <div dangerouslySetInnerHTML={{ __html: data.post.html }} />\n)\nexport default Page\n","import { graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport React from 'react'\n\nimport Post from 'templates/Post'\nimport Meta from 'components/Meta'\nimport Layout from 'components/Layout'\nimport Page from 'templates/Page'\n\nconst Template = ({ data, location }) => (\n  <div>\n    <Layout location={location}>\n      <Meta\n        title={get(data, 'post.frontmatter.title')}\n        site={get(data, 'site.meta')}\n        desc={get(data, 'post.frontmatter.description')}\n        ogimg={get(data, 'post.frontmatter.image')}\n      />\n      {get(data, 'post.frontmatter.layout') !== 'page' ? (\n        <Post\n          data={get(data, 'post')}\n          options={{\n            isIndex: false,\n            adsense: get(data, 'site.meta.adsense'),\n          }}\n        />\n      ) : (\n        <Page {...this.props} />\n      )}\n    </Layout>\n  </div>\n)\nexport default Template\n\nexport const pageQuery = graphql`\n  query PostByPath($path: String!) {\n    site {\n      meta: siteMetadata {\n        title\n        description\n        url: siteUrl\n        author\n        twitter\n        adsense\n      }\n    }\n    post: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      id\n      html\n      frontmatter {\n        layout\n        title\n        path\n        category\n        skill\n        role\n        description\n        date(formatString: \"YYYY\")\n        image {\n          childImageSharp {\n            fixed(width: 500) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n            fluid(quality: 90) {\n              ...GatsbyImageSharpFluid\n            }  \n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\n\nclass Adsense extends React.Component {\n  componentDidMount() {\n    const { clientId } = this.props\n    if (clientId) {\n      ;(window.adsbygoogle = window.adsbygoogle || []).push({})\n    }\n  }\n\n  render() {\n    const { clientId, slotId, format } = this.props\n\n    return clientId ? (\n      <div className=\"ad\">\n        <ins\n          className=\"adsbygoogle\"\n          style={{ display: 'block' }}\n          data-ad-client={clientId}\n          data-ad-slot={slotId}\n          data-ad-format={format}\n        />\n      </div>\n    ) : (\n      ''\n    )\n  }\n}\nexport default Adsense\n","import { Link } from 'gatsby'\nimport get from 'lodash/get'\nimport React from 'react'\nimport map from 'lodash/map'\nimport Img from 'gatsby-image'\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport Adsense from 'components/Adsense'\nimport './style.scss'\nimport ScrollToTop from \"react-scroll-up\";\n\nconst Post = ({ data, options }) => {\n  const {\n    title,\n    path,\n    image,\n  } = data.frontmatter\n  const { isIndex, adsense } = options\n  const html = get(data, 'html')\n  const isMore = isIndex && !!html.match('<!--more-->')\n  const fluid = get(image, 'childImageSharp.fluid')\n\n  return (\n    \n\n  <div className=\"article-content\" key={path}>\n    <div className=\"offset-lg-3 col-lg-8 col-md-12 p-0\" key={path}>\n      <div className=\"container\">\n        <div className=\"row mt-5\">\n          <div className=\"col-md-10 mx-auto\"> \n          <ScrollAnimation animateIn='fadeIn' animateOnce={true}>\n            <h1 className=\"mt-5\">{title}</h1>\n          </ScrollAnimation> \n\n          <ScrollAnimation animateIn='fadeInUp' animateOnce={true}>\n            {fluid ? (\n                <Img fluid={fluid} className=\"feature-image\"/>\n              ) : (\n                ''\n              )}\n            <div\n              className=\"content\"\n              dangerouslySetInnerHTML={{\n                __html: isMore ? getDescription(html) : html,\n              }}\n            />\n            {isMore ? Button({ path, label: 'MORE', primary: true }) : ''}\n            {getAd(isIndex, adsense)}    \n            </ScrollAnimation> \n            <ScrollToTop showUnder={360}>\n              <img src=\"/img/arrow.svg\" height=\"45\" width=\"45\"></img>\n            </ScrollToTop>\n          </div> \n        </div>\n      </div>\n    </div>\n  </div> \n  )\n}\n\nexport default Post\n\nconst getAd = (isIndex, adsense) => {\n  return !isIndex ? <Adsense clientId={adsense} slotId=\"\" format=\"auto\" /> : ''\n}\n\nconst getDescription = body => {\n  body = body.replace(/<blockquote>/g, '<blockquote class=\"blockquote\">')\n  if (body.match('<!--more-->')) {\n    body = body.split('<!--more-->')\n    if (typeof body[0] !== 'undefined') {\n      return body[0]\n    }\n  }\n  return body\n}\n\nconst Button = ({ path, label, primary }) => (\n  <Link className=\"readmore\" to={path}>\n    <span\n      className={`btn btn-outline-primary btn-block ${\n        primary ? 'btn-outline-primary' : 'btn-outline-secondary'\n      }`}\n    >\n      {label}\n    </span>\n  </Link>\n)\n\nconst Role = ({ items}) =>\n  map(items, (item, i) => {\n    return (\n      <span\n        className={`attr_role`}\n        key={i}\n      >\n        {item}\n      </span>\n    )\n  })\n\n  const Skill = ({ items}) =>\n  map(items, (item, i) => {\n    return (\n      <span\n        className={`attr_skill`}\n        key={i}\n      >\n        {item}\n      </span>\n    )\n  })\n"],"sourceRoot":""}